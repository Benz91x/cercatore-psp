name: Bot annunci Subito (fast)

on:
  schedule:
    - cron: "*/5 * * * *"  # ogni 5 minuti (UTC)
  workflow_dispatch: {}

concurrency:
  group: subito-bot
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Google Chrome (stable) + minimal libs
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gpg xvfb
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub \
            | sudo gpg --dearmor -o /usr/share/keyrings/google-linux-signing-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux-signing-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" \
            | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable \
            libnss3 libnspr4 libatk-bridge2.0-0 libgtk-3-0 libxkbcommon0 libxcomposite1 \
            libxdamage1 libxrandr2 libgbm1 libxshmfence1 libasound2 fonts-liberation

      # niente playwright install / install-deps: usiamo Chrome di sistema
      - name: Run Subito bot (Chrome headful via Xvfb)
        env:
          PYTHONUNBUFFERED: "1"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          xvfb-run -a python -u bot_automatico_telegram.py

      - name: Upload diagnostics
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: diagnostica
          path: |
            errore_*.png
            dump_*.html
          if-no-files-found: ignore
